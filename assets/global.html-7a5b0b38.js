import{_ as d,r as t,o as c,c as i,b as e,e as o,a,w as h,f as s}from"./app-8967e7f1.js";const l={},p=e("h1",{id:"全局设置",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#全局设置","aria-hidden":"true"},"#"),o(" 全局设置")],-1),u=e("h2",{id:"隐藏文件",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#隐藏文件","aria-hidden":"true"},"#"),o(),e("strong",null,"隐藏文件")],-1),g=e("code",null,"javascript",-1),_={href:"http://README.md",target:"_blank",rel:"noopener noreferrer"},x=s('<h2 id="打包下载" tabindex="-1"><a class="header-anchor" href="#打包下载" aria-hidden="true">#</a> <strong>打包下载</strong></h2><p>是否开启文件打包下载，默认为 true。</p><h2 id="自定义头部" tabindex="-1"><a class="header-anchor" href="#自定义头部" aria-hidden="true">#</a> <strong>自定义头部</strong></h2><p>在此处设置的任何内容都会自动放置在网页头部的开头</p><h2 id="自定义body" tabindex="-1"><a class="header-anchor" href="#自定义body" aria-hidden="true">#</a> <strong>自定义body</strong></h2><p>在此处设置的任何内容都会自动放置在网页正文的末尾</p><h2 id="链接过期时间" tabindex="-1"><a class="header-anchor" href="#链接过期时间" aria-hidden="true">#</a> <strong>链接过期时间</strong></h2><p>直接链接的过期时间，以小时为单位。如果为 0，则不会过期。默认值为 0。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>只有加了密码的路径的直链才会有过期时间，否则不会过期。因为过期时间是加到sign查询参数中的，没有加密码的路径是不会检查sign的。</p></div><h2 id="隐私正则表达式" tabindex="-1"><a class="header-anchor" href="#隐私正则表达式" aria-hidden="true">#</a> <strong>隐私正则表达式</strong></h2><p>不想在错误消息中显示的内容，每行一个正则表达式（在 <code>Golang</code> 中）。匹配的内容将被替换为对应长度的*。</p><h2 id="ocr-api" tabindex="-1"><a class="header-anchor" href="#ocr-api" aria-hidden="true">#</a> <strong>ocr api</strong></h2>',12),b={href:"https://hub.docker.com/r/xhofe/ddddocr_server",target:"_blank",rel:"noopener noreferrer"},f={href:"https://app.koyeb.com/",target:"_blank",rel:"noopener noreferrer"},k=e("h2",{id:"签名所有",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#签名所有","aria-hidden":"true"},"#"),o(),e("strong",null,"签名所有")],-1),m={href:"https://xxxx.com/d/xx",target:"_blank",rel:"noopener noreferrer"},q=e("mark",null,[e("strong",null,"sign=vUQ5KFXnwMseKnIUXGRcfoG3cEHzKFBiPGp1NriMDXA=:0")],-1),v=e("p",null,"若需要关闭自行关闭即可，但需要注意安全问题，关闭签名后若站点能被公网访问，可能会被绕过密码访问私人文件。",-1),W=e("h2",{id:"转发直链参数",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#转发直链参数","aria-hidden":"true"},"#"),o(),e("strong",null,"转发直链参数")],-1),y={href:"https://github.com/alist-org/alist/issues/3123",target:"_blank",rel:"noopener noreferrer"},E=s(`<h2 id="文件名字符映射" tabindex="-1"><a class="header-anchor" href="#文件名字符映射" aria-hidden="true">#</a> <strong>文件名字符映射</strong></h2><p>主要是来映射一些特殊符 让Alist来正常工作</p><p>比如 <code>/</code> 符号在Alist程序里面是 路径符号 有些人的文件带 <code>/</code> 符号导致文件中途断开无法查看等错误，我们就可以通过这种方式来映射转换一下。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span><span class="token property">&quot;/&quot;</span><span class="token operator">:</span> <span class="token string">&quot;|&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;xx1&quot;</span><span class="token operator">:</span><span class="token string">&quot;xx1&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;xx2&quot;</span><span class="token operator">:</span><span class="token string">&quot;xx2&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>默认的是开头的第一个(<code>&quot;/&quot;: &quot;|&quot;,&quot;</code>)，后续有想自己添加的可以自己在后面添加，格式就是如上格式很简单。</p><h2 id="启用-webauthn-登录" tabindex="-1"><a class="header-anchor" href="#启用-webauthn-登录" aria-hidden="true">#</a> <strong>启用 Webauthn 登录</strong></h2><p><strong>Webauthn</strong> 是什么? 自己在搜索引擎吧，今天教大家如何使用</p><p>在后台<code>设置</code>--&gt;<code>全局</code>--&gt;打开<code>启用 Webauthn 登录</code>，回到后台<code>个人资料</code>--&gt;绑定<code>添加 Webauthn 凭据</code></p><ul><li><code>添加 Webauthn 凭据</code>使用的是本台电脑的<code>PIN</code>或者<code>配套设备(例如手环,手表)</code>【支持 Windows Hello配置中的所有选项,例如<code>人脸</code>和<code>指纹</code>】</li><li>就像绑定单点登录那样进行绑定，绑定好后我们就可以使用 <strong><code>Webauthn</code></strong> 进行登录了 <ul><li>在登录页面点击最右侧的登录按钮，输入我们的用户名，点击登录，然后再解锁需要的<code>Webauthn</code>验证方式就可以登录</li></ul></li><li>添加<code>Webauthn</code>需要一个安全来源，只能在<code>https</code>或者<code>localhost</code>使用 <ul><li>不安全的来源，例如：http，192.168.x.x，127.0.0.1，或者直接使用服务器IP，等这些地方不可以使用</li></ul></li></ul>`,9);function w(N,A){const n=t("ExternalLinkIcon"),r=t("RouterLink");return c(),i("div",null,[p,u,e("p",null,[o("匹配被正则表达式（"),g,o("）隐藏的文件。不明白的不要乱填。错误的正则表达式会导致前端页面崩溃。每行一个。默认情况下，有一个示例表达式将 "),e("a",_,[o("README.md"),a(n)]),o(" 从所有目录中隐藏。")]),e("p",null,[o("并不是真的在隐藏。它仍然存在于 api 返回的列表中，只是没有出现在前端列表中。因此，如果您想真正隐藏，请添加"),a(r,{to:"/zh/guide/advanced/meta.html"},{default:h(()=>[o("元信息")]),_:1}),o("。")]),x,e("p",null,[o("用于识别验证码。你可以自己部署："),e("a",b,[o("https://hub.docker.com/r/xhofe/ddddocr_server"),a(n)]),o(" 默认的 ocr api 部署在 "),e("a",f,[o("koyeb"),a(n)]),o(" 上（无可用性保证），不建议在生产环境中使用。")]),k,e("p",null,[o("向所有文件的直接链接添加签名(无论是否有密码) 即"),e("a",m,[o("https://xxxx.com/d/xx"),a(n)]),o("? "),q]),v,W,e("p",null,[o("可以自行前往查看："),e("strong",null,[e("a",y,[o("https://github.com/alist-org/alist/issues/3123"),a(n)])])]),E])}const R=d(l,[["render",w],["__file","global.html.vue"]]);export{R as default};
