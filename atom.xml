<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.20140117.xyz</id>
    <title>村哥</title>
    <updated>2020-07-25T13:11:09.846Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://blog.20140117.xyz"/>
    <link rel="self" href="https://blog.20140117.xyz/atom.xml"/>
    <subtitle>农村娃来到了深山里！</subtitle>
    <logo>https://blog.20140117.xyz/images/avatar.png</logo>
    <icon>https://blog.20140117.xyz/favicon.ico</icon>
    <rights>All rights reserved 2020, 村哥</rights>
    <entry>
        <title type="html"><![CDATA[Aria2 + Rclone 实现 OneDrive、Google Drive 等网盘离线下载（新）]]></title>
        <id>https://blog.20140117.xyz/post/aria2-rclone-shi-xian-onedrivegoogle-drive-deng-wang-pan-chi-xian-xia-zai-xin/</id>
        <link href="https://blog.20140117.xyz/post/aria2-rclone-shi-xian-onedrivegoogle-drive-deng-wang-pan-chi-xian-xia-zai-xin/">
        </link>
        <updated>2020-07-25T13:04:58.000Z</updated>
        <content type="html"><![CDATA[<h2 id="前言">前言</h2>
<p>Aria2 有一个配置项 <code>on-download-complete</code>，在下载完后执行一个脚本。当下载完成后 Aria2 会给脚本传递 3 个变量 <code>$1</code>、<code>$2</code>、<code>$3</code> 分别为 gid 、文件数量、文件路径。利用这个配置项和这些变量就可以实现很多功能，比如下载完成后调用 Rclone 进行上传操作。整个过程简单来说就是，Aria2 下载文件到 VPS ，完成后告诉 Rclone 将这个文件上传到网盘。理论上只要是 Rclone 支持的网盘，都可以按照这个思路来实现<s>伪</s>离线下载。</p>
<h2 id="准备工作">准备工作</h2>
<p>VPS 是必须的，如果你还没有 VPS 推荐去看《<a href="https://p3terx.com/archives/cheap-and-costeffective-vps-recommended.html">便宜高性价比和白嫖 VPS 推荐</a>》，这里精选了博主这些年来使用过的好用的 VPS 。</p>
<h2 id="安装-aria2">安装 Aria2</h2>
<p>这里使用 <a href="https://p3terx.com/go/aHR0cHM6Ly9naXRodWIuY29tL1AzVEVSWC9hcmlhMi5zaA==">Aria2 一键安装管理脚本 增强版</a>，执行下面的代码下载并运行脚本，出现脚本操作菜单输入 <code>1</code> 开始安装。</p>
<pre><code class="language-none">wget -N git.io/aria2.sh &amp;&amp; chmod +x aria2.sh &amp;&amp; ./aria2.sh
</code></pre>
<h2 id="安装和配置-rclone">安装和配置 Rclone</h2>
<p>RCLONE 官方提供了<a href="https://p3terx.com/go/aHR0cHM6Ly9yY2xvbmUub3JnL2luc3RhbGwvI3NjcmlwdC1pbnN0YWxsYXRpb24=">一键安装脚本</a>：</p>
<pre><code class="language-none">curl https://rclone.org/install.sh | sudo bash
</code></pre>
<p>安装完后，输入 <code>rclone config</code> 命令进入交互式配置选项，按照提示一步一步来进行操作即可。如果你一脸懵逼，可以去看《<a href="https://p3terx.com/archives/rclone-installation-and-configuration-tutorial.html">Rclone 安装配置教程</a>》来了解配置的详细过程。</p>
<h2 id="配置自动上传脚本">配置自动上传脚本</h2>
<p><a href="https://p3terx.com/go/aHR0cHM6Ly9naXRodWIuY29tL1AzVEVSWC9hcmlhMi5zaA==">Aria2 一键安装管理脚本 增强版</a> 整合了 <a href="https://p3terx.com/go/aHR0cHM6Ly9naXRodWIuY29tL1AzVEVSWC9hcmlhMl9wZXJmZWN0X2NvbmZpZw==">Aria2 完美配置</a> ，安装后会附带一些附加功能脚本功能脚本，RCLONE 自动上传脚本就是其中之一。由于默认不启用，所以需要手动启用。</p>
<ul>
<li>输入<code>nano /root/.aria2c/script.conf</code>打开附加功能脚本配置文件进行修改，有中文注释，按照自己的实际情况进行修改，一般只需要修改下面2个部分。</li>
</ul>
<pre><code class="language-none"># 网盘名称(RCLONE 配置时填写的 name)
drive-name=OneDrive
# 网盘目录。注释或留空为网盘根目录，末尾不要有斜杠。
drive-dir=/DRIVEX/Download
</code></pre>
<blockquote>
<p>nano 编辑器的操作方法参见《<a href="https://p3terx.com/archives/linux-nano-tutorial.html">Linux 下适合新手的文本编辑器 nano 使用教程</a>》</p>
</blockquote>
<ul>
<li>输入<code>nano /root/.aria2c/aria2.conf</code>打开 Aria2 配置文件进行修改。或使用<a href="https://p3terx.com/go/aHR0cHM6Ly9naXRodWIuY29tL1AzVEVSWC9hcmlhMi5zaA==">Aria2 一键安装管理脚本 增强版</a>中的手动修改选项打开配置文件进行修改。找到“下载完成后执行的命令”，把<code>clean.sh</code>替换为<code>upload.sh</code>。</li>
</ul>
<pre><code class="language-none"># 下载完成后执行的命令
on-download-complete=/root/.aria2c/upload.sh
</code></pre>
<ul>
<li>重启 Aria2</li>
</ul>
<pre><code class="language-none">service aria2 restart
</code></pre>
<h2 id="使用">使用</h2>
<p>当你进行完以上所有操作，现在下载文件就会自动上传至相应的网盘，本地的文件也会自动删除。</p>
<p>由于 Aria2 是命令行后端软件，需要配合前端 GUI 才能有更好的使用体验，对于从来没有接触过的萌新，建议去看《<a href="https://p3terx.com/archives/aria2-frontend-ariang-tutorial.html">Aria2 前端面板 AriaNg 使用教程</a>》来了解相关基础知识。</p>
<h2 id="遇到问题如何处理">遇到问题如何处理</h2>
<p>严格按照教程来进行操作不会遇到问题，如果有问题那一定是你自身的问题，请仔细阅读教程中的每一个字。</p>
<h3 id="faq">FAQ</h3>
<p>遇到问题先看 <a href="https://p3terx.com/archives/aria2_perfect_config-faq.html">FAQ</a> ，这里记录了有关 Aria2 的常见问题与解决方案。</p>
<h3 id="提问">提问</h3>
<p>你可以选择加入 <a href="https://p3terx.com/go/aHR0cHM6Ly90Lm1lL2FyaWEyYw==">Aria2 TG 群</a>和小伙伴们一起讨论。要注意提问的方式和提供有用的信息。提问前最好去了解《<a href="https://p3terx.com/go/aHR0cHM6Ly9naXRodWIuY29tL3J5YW5oYW53dS9Ib3ctVG8tQXNrLVF1ZXN0aW9ucy1UaGUtU21hcnQtV2F5L2Jsb2IvbWFzdGVyL1JFQURNRS16aF9DTi5tZA==">提问的智慧</a>》，这能更好的帮助你去解决问题和节约时间。诸如 “为什么不能使用？”、“那你能帮帮我吗？” 之类的问题并不能解决什么问题，你只能得到否定的回答。</p>
<blockquote>
<p>转自<a href="https://p3terx.com/archives/offline-download-of-onedrive-gdrive.html">PETERX</a></p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[深田咏美]]></title>
        <id>https://blog.20140117.xyz/post/shen-tian-yong-mei/</id>
        <link href="https://blog.20140117.xyz/post/shen-tian-yong-mei/">
        </link>
        <updated>2020-07-18T04:11:33.000Z</updated>
        <content type="html"><![CDATA[<p><img src="https://p.sda1.dev/0/d8e0292f89c2b712e950376bc4a474fa/photo_122@13-07-2020_12-41-38.webp" alt="photo_122@13-07-2020_12-41-38.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/217e8f60bde607f9f357d91e33f67223/photo_121@13-07-2020_12-41-38.webp" alt="photo_121@13-07-2020_12-41-38.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/694f26aa7e6f6ba0ba10a49d04b9fa79/photo_120@13-07-2020_12-41-38.webp" alt="photo_120@13-07-2020_12-41-38.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/eb5aac6a771fd135635785a28f54c306/photo_119@13-07-2020_12-41-38.webp" alt="photo_119@13-07-2020_12-41-38.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/1940ccca89ee3970f35fe091ddac0a73/photo_118@13-07-2020_12-41-38.webp" alt="photo_118@13-07-2020_12-41-38.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/af0454547ea5c38259b9df6a0c491dda/photo_116@13-07-2020_12-41-38.webp" alt="photo_116@13-07-2020_12-41-38.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/6a08a3b8585b68df776099dd14c5511d/photo_117@13-07-2020_12-41-38.webp" alt="photo_117@13-07-2020_12-41-38.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/4c71f16cd4111277c671e6d19f8b2e8b/photo_114@13-07-2020_12-41-38.webp" alt="photo_114@13-07-2020_12-41-38.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/878bdd048b48f30075b01b188528325d/photo_115@13-07-2020_12-41-38.webp" alt="photo_115@13-07-2020_12-41-38.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/11be79bfab254a9e040aa31fe85a9dfb/photo_106@13-07-2020_12-41-25.webp" alt="photo_106@13-07-2020_12-41-25.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/67891da7a3c0e38d23580e5a0fd03f24/photo_113@13-07-2020_12-41-38.webp" alt="photo_113@13-07-2020_12-41-38.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/668d9cd406a6232b6b7f3d316c431a6c/photo_112@13-07-2020_12-41-25.webp" alt="photo_112@13-07-2020_12-41-25.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/28fa24170b6ea4681b108ddef62eb0e9/photo_111@13-07-2020_12-41-25.webp" alt="photo_111@13-07-2020_12-41-25.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/f02f870e11d974be4ff3ada76d3dbc33/photo_100@13-07-2020_12-41-15.webp" alt="photo_100@13-07-2020_12-41-15.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/bc1c2f2ba8a0b6bafc85cbe3d2ec61eb/photo_110@13-07-2020_12-41-25.webp" alt="photo_110@13-07-2020_12-41-25.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/b4c6cc7fe15431e735df6b18f365fe19/photo_109@13-07-2020_12-41-25.webp" alt="photo_109@13-07-2020_12-41-25.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/7938d7c14d8c9cde22cd88b7c484fa4b/photo_107@13-07-2020_12-41-25.webp" alt="photo_107@13-07-2020_12-41-25.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/406e01a085d51d8fa883313d082fde74/photo_108@13-07-2020_12-41-25.webp" alt="photo_108@13-07-2020_12-41-25.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/762ed677ade2046af0a55ad555487153/photo_105@13-07-2020_12-41-25.webp" alt="photo_105@13-07-2020_12-41-25.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/8360234b6c630d74f9b3187e0dcd3f67/photo_104@13-07-2020_12-41-25.webp" alt="photo_104@13-07-2020_12-41-25.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/2a04ed22290b20159c0553d5b765fe13/photo_102@13-07-2020_12-41-15.webp" alt="photo_102@13-07-2020_12-41-15.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/18bba53b2071d60273819b12a7a9e93d/photo_103@13-07-2020_12-41-25.webp" alt="photo_103@13-07-2020_12-41-25.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/f92cdaf950edba31331df3d78a600fc0/photo_101@13-07-2020_12-41-15.webp" alt="photo_101@13-07-2020_12-41-15.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/02dc5a799ceb2bfac200dc30ec267d70/photo_98@13-07-2020_12-41-15.webp" alt="photo_98@13-07-2020_12-41-15.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/d241c219b67fdc5a1a2cb8d77f96b707/photo_99@13-07-2020_12-41-15.webp" alt="photo_99@13-07-2020_12-41-15.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/ceb63eb57b301d195edb8ac6d57adac5/photo_97@13-07-2020_12-41-15.webp" alt="photo_97@13-07-2020_12-41-15.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/0094b5d2638432442992bad78ccc8e05/photo_96@13-07-2020_12-41-15.webp" alt="photo_96@13-07-2020_12-41-15.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/cfc97326a44f091d18b4711c4ec44c5c/photo_95@13-07-2020_12-41-15.webp" alt="photo_95@13-07-2020_12-41-15.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/b46f75faa995bc2d3eeb2c83f8d0413e/photo_94@13-07-2020_12-41-15.webp" alt="photo_94@13-07-2020_12-41-15.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/823c58043ef7277fd76bf85a7193b11c/photo_93@13-07-2020_12-41-15.webp" alt="photo_93@13-07-2020_12-41-15.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/9d50765a021d872fe3c00e9f7e19ab4c/photo_91@13-07-2020_12-41-06.webp" alt="photo_91@13-07-2020_12-41-06.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/b41a215810462e0ec0b4ba717aaf0f06/photo_92@13-07-2020_12-41-06.webp" alt="photo_92@13-07-2020_12-41-06.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/6f450c77582af292f7319ae1bbe7851b/photo_90@13-07-2020_12-41-06.webp" alt="photo_90@13-07-2020_12-41-06.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/2a56ae92df23fdaacbe65e7dddc813c9/photo_89@13-07-2020_12-41-06.webp" alt="photo_89@13-07-2020_12-41-06.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/0ddf4207df3316821fa8d7270d246003/photo_88@13-07-2020_12-41-06.webp" alt="photo_88@13-07-2020_12-41-06.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/fe1891b03a2b0276d638604bd1daa4fd/photo_84@13-07-2020_12-41-06.webp" alt="photo_84@13-07-2020_12-41-06.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/18715b5f2cc3e948fa6c0acccc9c7eaa/photo_87@13-07-2020_12-41-06.webp" alt="photo_87@13-07-2020_12-41-06.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/3ce91623ac91510dc9e989a174d6b28d/photo_85@13-07-2020_12-41-06.webp" alt="photo_85@13-07-2020_12-41-06.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/85ca13eccbc41b6a67d89cf39a2ecf7c/photo_86@13-07-2020_12-41-06.webp" alt="photo_86@13-07-2020_12-41-06.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/8aa350c0c21eae2cd1055b73ae13998d/photo_80@13-07-2020_12-40-55.webp" alt="photo_80@13-07-2020_12-40-55.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/fbc8344845962b5d22c066117155dc65/photo_83@13-07-2020_12-41-06.webp" alt="photo_83@13-07-2020_12-41-06.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/f1820ef60866a7b381b825d3d83455cb/photo_82@13-07-2020_12-40-55.webp" alt="photo_82@13-07-2020_12-40-55.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/041815e1ce4989850f6fcddf4df7d0c1/photo_81@13-07-2020_12-40-55.webp" alt="photo_81@13-07-2020_12-40-55.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/9740652a28fa21116c6c6ee4c3c04817/photo_79@13-07-2020_12-40-55.webp" alt="photo_79@13-07-2020_12-40-55.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/27c28e02931ec36800efae886d275a6c/photo_78@13-07-2020_12-40-55.webp" alt="photo_78@13-07-2020_12-40-55.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/9a16c39ce0cc25e1846833d14f5beb62/photo_77@13-07-2020_12-40-55.webp" alt="photo_77@13-07-2020_12-40-55.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/2320c069872354100c2d842eb21be8bb/photo_76@13-07-2020_12-40-55.webp" alt="photo_76@13-07-2020_12-40-55.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/2de09b92ad6eb438fa748bceaac5d1b9/photo_74@13-07-2020_12-40-55.webp" alt="photo_74@13-07-2020_12-40-55.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/14b23aaeeaf6ae43f786119a47042bc3/photo_73@13-07-2020_12-40-55.webp" alt="photo_73@13-07-2020_12-40-55.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/91ea9a317b2217123fad5d8186f7207d/photo_75@13-07-2020_12-40-55.webp" alt="photo_75@13-07-2020_12-40-55.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/ff9ac22bd0c26c24ba505b6ec0990157/photo_72@13-07-2020_12-40-44.webp" alt="photo_72@13-07-2020_12-40-44.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/adac7551803dcf275019dd7e798b11bd/photo_69@13-07-2020_12-40-44.webp" alt="photo_69@13-07-2020_12-40-44.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/b7e6e7900b32d1507e26324ef6ae004c/photo_71@13-07-2020_12-40-44.webp" alt="photo_71@13-07-2020_12-40-44.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/6bb3d4fe612f973f409a38350d490f49/photo_70@13-07-2020_12-40-44.webp" alt="photo_70@13-07-2020_12-40-44.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/ab3d5c628e1a96630bf2dcf6afbd758f/photo_68@13-07-2020_12-40-44.webp" alt="photo_68@13-07-2020_12-40-44.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/9b1a6c3be71f04f96e74f6a6c097f752/photo_65@13-07-2020_12-40-44.webp" alt="photo_65@13-07-2020_12-40-44.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/8b5a5151a4547da5045501af92283f44/photo_66@13-07-2020_12-40-44.webp" alt="photo_66@13-07-2020_12-40-44.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/4af7a6ef5f70768d7560aebd0ae3885e/photo_67@13-07-2020_12-40-44.webp" alt="photo_67@13-07-2020_12-40-44.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/17f09b47383b1237d3c5b2d3a5b65238/photo_64@13-07-2020_12-40-44.webp" alt="photo_64@13-07-2020_12-40-44.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/2f150951db5b96177fcfaea9dfeddd4f/photo_63@13-07-2020_12-40-44.webp" alt="photo_63@13-07-2020_12-40-44.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/a2ca5e653d3621b6c156a009b53001ec/photo_61@13-07-2020_12-40-35.webp" alt="photo_61@13-07-2020_12-40-35.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/19c9f662e8d59f2885310f7f3a0b3440/photo_62@13-07-2020_12-40-35.webp" alt="photo_62@13-07-2020_12-40-35.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/8c24d9274933653f169305e0e59fb208/photo_60@13-07-2020_12-40-35.webp" alt="photo_60@13-07-2020_12-40-35.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/1f90f76d1d92395d90d8ccd7072f5dd2/photo_59@13-07-2020_12-40-35.webp" alt="photo_59@13-07-2020_12-40-35.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/8fd15d8c21da19f028f31e1a07fd0547/photo_58@13-07-2020_12-40-35.webp" alt="photo_58@13-07-2020_12-40-35.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/c833d3ae5f632be66982db47d0bd221b/photo_57@13-07-2020_12-40-35.webp" alt="photo_57@13-07-2020_12-40-35.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/276a09685da0ac3b23252c1d0b34710f/photo_56@13-07-2020_12-40-35.webp" alt="photo_56@13-07-2020_12-40-35.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/20402d3b04fea16d8959a85ff7e92daa/photo_55@13-07-2020_12-40-35.webp" alt="photo_55@13-07-2020_12-40-35.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/78be37c071725e24fc50693dd7292dad/photo_54@13-07-2020_12-40-35.webp" alt="photo_54@13-07-2020_12-40-35.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/d3fd46f5e539df450abf3d6342020550/photo_53@13-07-2020_12-40-35.webp" alt="photo_53@13-07-2020_12-40-35.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/284f84eb72bf38af8c712927af01829d/photo_52@13-07-2020_12-40-23.webp" alt="photo_52@13-07-2020_12-40-23.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/5c56f7b11e48d9a51a19d68aa5233de7/photo_51@13-07-2020_12-40-23.webp" alt="photo_51@13-07-2020_12-40-23.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/92d7a9471ca817b9c2acdabd5d093d71/photo_50@13-07-2020_12-40-23.webp" alt="photo_50@13-07-2020_12-40-23.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/7c73569c933f5e6dce4ca433eef81fbb/photo_49@13-07-2020_12-40-23.webp" alt="photo_49@13-07-2020_12-40-23.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/ce4b0d2d863250981c4df5fb1938e9ca/photo_44@13-07-2020_12-40-23.webp" alt="photo_44@13-07-2020_12-40-23.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/ab12338bd71d4466f25b8b2b5714ab72/photo_48@13-07-2020_12-40-23.webp" alt="photo_48@13-07-2020_12-40-23.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/3e732918351f540babede575586652cf/photo_46@13-07-2020_12-40-23.webp" alt="photo_46@13-07-2020_12-40-23.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/4c49d0c239fbf4c956f5424581c9d304/photo_45@13-07-2020_12-40-23.webp" alt="photo_45@13-07-2020_12-40-23.webp" loading="lazy"><br>
<img src="https://p.sda1.dev/0/20467059469d454c55639cfb9dc43377/photo_47@13-07-2020_12-40-23.webp" alt="photo_47@13-07-2020_12-40-23.webp" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[自己动手-shareX对接hidove图床]]></title>
        <id>https://blog.20140117.xyz/post/s-to-hi/</id>
        <link href="https://blog.20140117.xyz/post/s-to-hi/">
        </link>
        <updated>2020-05-30T10:44:24.000Z</updated>
        <content type="html"><![CDATA[<p>替换token以及URL，导入sharex即可使用！</p>
<pre><code>{
  &quot;Version&quot;: &quot;13.1.0&quot;,
  &quot;Name&quot;: &quot;Hidove图床&quot;,
  &quot;DestinationType&quot;: &quot;ImageUploader&quot;,
  &quot;RequestMethod&quot;: &quot;POST&quot;,
  &quot;RequestURL&quot;: &quot;https://img.abcyun.co/api/upload&quot;,
  &quot;Body&quot;: &quot;MultipartFormData&quot;,
  &quot;Arguments&quot;: {
    &quot;token&quot;: &quot;**************************&quot;,
    &quot;apiType&quot;: &quot;this,ali,toutiao,Huluxia&quot;
  },
  &quot;FileFormName&quot;: &quot;image&quot;,
  &quot;URL&quot;: &quot;$json:data.url.distribute$&quot;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[wps自动打卡白嫖会员(签到已失效)]]></title>
        <id>https://blog.20140117.xyz/post/wps-sign/</id>
        <link href="https://blog.20140117.xyz/post/wps-sign/">
        </link>
        <updated>2020-05-30T10:40:37.000Z</updated>
        <content type="html"><![CDATA[<p><img src="https://pic.abcyun.co/image/5ecf0d0f79957.jpg" alt="WPS" loading="lazy"><br>
WPS是一款非常实用且模板超多的免费软件，可是WPS的很多功能都需要会员才可以使用<br>
正巧，WPS有个签到免费领取试用会员的活动，本次将讲解利用阿里云（腾讯云自动打卡签到）完成无限试用</p>
<ol>
<li>
<p><strong>获取WPS账号的cookies</strong><br>
获取方式：<a href="https://account.wps.cn/?cb=https://www.wps.cn/">单击登陆WPS</a><br>
登陆之后我们浏览器F12进入审查元素，选择network，然后我们刷新下网页再搜索<em>wps_sid</em>即可获取到我们自己账号的wps_sid保存下来，之后需要使用的<br>
<img src="https://ae01.alicdn.com/kf/H209edcde2bb546e4ab0d478d31d9a039q.jpg" alt="获取wps_sid" loading="lazy"><br>
然后获取我们的自己账号的ID，点击刚刚登陆的网页的右上角，自己的头像，即可查看自己的ID<br>
<img src="https://ae01.alicdn.com/kf/Hdc67f6fb0b74480eba2c88c5490381e98.jpg" alt="user_id" loading="lazy"></p>
</li>
<li>
<p><strong>下载工具包</strong><br>
下载地址：<a href="https://pan.52ruoli.cn/other%20tool/PC%20tool/WPS%E8%87%AA%E5%8A%A8%E7%AD%BE%E5%88%B0%E5%B7%A5%E5%85%B7.zip?preview">WPS自动签到工具</a></p>
</li>
<li>
<p><strong>阿里云创建函数计算</strong><br>
（腾讯云叫云函数，一个道理）<br>
新建函数其他一般默认或随意，需要更改的有</p>
<blockquote>
<p>运行环境：nodejs10<br>
函数入口：index.main_handler</p>
</blockquote>
<p><img src="https://ae01.alicdn.com/kf/He6677545b38e49b18615e9c6cc29b28d4.jpg" alt="创建函数" loading="lazy"><br>
之后进入<em>函数详情</em>，选择<em>代码执行</em>，选择<em>代码包上传</em><br>
上传第2步下载的代表包然后编辑如图<br>
<img src="https://ae01.alicdn.com/kf/Hb6e9eef8cd0948f2a35c1d4718b635ac1.jpg" alt="编辑代码" loading="lazy"><br>
sckey获取链接：<a href="http://sc.ftqq.com/3.version">单击注册</a></p>
</li>
<li>
<p><strong>创建定时触发</strong><br>
选择代码执行右边的触发器，新建触发器<br>
时间配置选择<em>Cron表达式</em>，输入</p>
<blockquote>
<p>0 0 0 * * *</p>
</blockquote>
<p>配置完成即可每天早晨8点自动执行函数<br>
<img src="https://ae01.alicdn.com/kf/Hc7c28bd1c2d34710886152590cab88741.jpg" alt="触发器" loading="lazy"></p>
</li>
</ol>
<p>转载自<a href="http://ruoli.vip/11.html">若离博客</a></p>
<h1 id="友情提示">友情提示：</h1>
<p><strong>wps登录后不要退出登录！要不然sid会失效，重新登录需重新获取！</strong></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[简单使用PicGo对接Hidove图床]]></title>
        <id>https://blog.20140117.xyz/post/picgo-to-hi/</id>
        <link href="https://blog.20140117.xyz/post/picgo-to-hi/">
        </link>
        <updated>2020-04-04T00:10:14.000Z</updated>
        <content type="html"><![CDATA[<p>##<strong>说明</strong><br>
最近几天陆续有小伙伴问我如何使用<code>PicGo</code>、<code>UPic</code>等客户端图床工具该如何配置对接<code>Hidove图床</code>。<br>
我挨个看了看，觉得<code>PicGo</code>很不错，各种系统都支持，所以介绍一下<code>PicGo</code>的用法，其他工具用法也可以照葫芦画瓢，就不说了。</p>
<h1 id="安装需要">安装需要</h1>
<h2 id="安装picgo">安装PicGo</h2>
<ul>
<li><a href="https://blog.hidove.cn/go/aHR0cHM6Ly9tb2x1bmVyZmlubi5jb20vUGljR28v">https://molunerfinn.com/PicGo/</a></li>
</ul>
<h2 id="安装nodejs">安装Node.js</h2>
<ul>
<li><a href="https://blog.hidove.cn/go/aHR0cHM6Ly9ub2RlanMub3JnL2VuLw==">https://nodejs.org/en/</a></li>
</ul>
<blockquote>
<p>在插件界面的搜索栏搜索插件名<code>web-uploader</code>并安装</p>
</blockquote>
<figure data-type="image" tabindex="1"><a href="https://dlolb.top/2020/03/31/3655a0d9b9aa43dc.png"><img src="https://dlolb.top/2020/03/31/3655a0d9b9aa43dc.png" alt="使用PicGo对接Hidove图床" loading="lazy"></a></figure>
<h2 id="配置web-uploader">配置<code>web-uploader</code></h2>
<figure data-type="image" tabindex="2"><a href="https://dlolb.top/2020/04/01/8f06b9a51e6ece1d.png"><img src="https://dlolb.top/2020/04/01/8f06b9a51e6ece1d.png" alt="使用PicGo对接Hidove图床" loading="lazy"></a></figure>
<ul>
<li>Json路径</li>
</ul>
<pre><code>data.url.distribute
</code></pre>
<ul>
<li>自定义Body问标准Json格式数据，请按需求修改</li>
</ul>
<pre><code>{&quot;token&quot;:&quot;xxxxxxxxxxxxx&quot;,&quot;apiType&quot;:&quot;ali&quot;}
</code></pre>
<h2 id="上传完毕">上传完毕</h2>
<figure data-type="image" tabindex="3"><a href="https://dlolb.top/2020/04/01/68fc9e9ec0006948.png"><img src="https://dlolb.top/2020/04/01/68fc9e9ec0006948.png" alt="使用PicGo对接Hidove图床" loading="lazy"></a></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[GitHub+Hexo 详细搭建个人网站教程]]></title>
        <id>https://blog.20140117.xyz/post/github-hexo/</id>
        <link href="https://blog.20140117.xyz/post/github-hexo/">
        </link>
        <updated>2020-03-17T01:50:50.000Z</updated>
        <content type="html"><![CDATA[<h2 id="前言"><strong>前言：</strong></h2>
<p>随着互联网浪潮的翻腾，国内外涌现出越来越多优秀的社交网站让用户分享信息更加便捷。然后，如果你是一个不甘寂寞的程序猿（媛），是否也想要搭建一个属于自己的个人网站，如果你曾经或者现在正有这样的想法，请跟随这篇文章发挥你的Geek精神，让你快速拥有自己的博客网站，写文章记录生活，享受这种从0到1的过程。</p>
<p><a href="https://www.zhihu.com/question/29755481">你见过的最棒的个人博客界面是什么样的？</a></p>
<h2 id="什么是hexo"><strong>什么是Hexo ?</strong></h2>
<figure data-type="image" tabindex="1"><img src="https://kyun.ltyuanfang.cn/tc/2020/05/30/73bc091c3174d.jpg" alt="img" loading="lazy"></figure>
<p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Heroku上，是搭建博客的首选框架。这里我们选用的是GitHub，你没看错，全球最大的同性恋交友网站（逃……）。Hexo同时也是GitHub上的开源项目，参见：<a href="https://link.zhihu.com/?target=https%3A//github.com/hexojs/hexo">hexojs/hexo</a> 如果想要更加全面的了解Hexo，可以到其官网 <a href="https://link.zhihu.com/?target=https%3A//hexo.io/">Hexo</a> 了解更多的细节，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。这里，默认各位猿/媛儿都知道GitHub就不再赘述。</p>
<p><strong>这是我的个人博客效果:</strong> <a href="https://link.zhihu.com/?target=http%3A//iamwr.com/">吴润 · RunDouble</a></p>
<p>下面正式从零开始搭建年轻人的第一个网站。</p>
<h2 id="搭建步骤"><strong>搭建步骤：</strong></h2>
<ul>
<li>获得个人网站域名</li>
<li>GitHub创建个人仓库</li>
<li>安装Git</li>
<li>安装Node.js</li>
<li>安装Hexo</li>
<li>推送网站</li>
<li>绑定域名</li>
<li>更换主题</li>
<li>初识MarkDown语法</li>
<li>发布文章</li>
<li>寻找图床</li>
<li>个性化设置</li>
<li>其他</li>
<li>附录</li>
</ul>
<p><strong>获得个人网站域名</strong></p>
<p>域名是网站的入口，也是网站的第一印象，比如饿了么的官网的域名是：<a href="https://link.zhihu.com/?target=https%3A//www.ele.me/">https://www.ele.me/</a> ，很是巧妙。常见的有com,cn,net,org等后缀，也有小众的xyz,me,io等后缀，根据你自己的喜好，选择不同的后缀，比如我选择就是常见的com后缀。很多小众奇特的后缀在大陆是没办法备案的，网站也就无法上线。然而使用GitHub托管我们的网站，完全不需要备案，因为托管我们的网站内容的服务器在美国，而且在国内备案流程也比较繁杂，时间需要一周左右。</p>
<p>申请域名的地方有很多，这里推荐阿里云：<a href="https://link.zhihu.com/?target=https%3A//www.aliyun.com/">阿里云-为了无法计算的价值</a> 申请入口：<a href="https://link.zhihu.com/?target=https%3A//wanwang.aliyun.com/domain/">域名注册</a> 购买域名这也是我们整个搭建过程中惟一一个需要花钱的地方。如果你已经有了空闲域名就无需购买，直接使用即可。</p>
<p><strong>GitHub创建个人仓库</strong></p>
<p>登录到GitHub,如果没有GitHub帐号，使用你的邮箱注册GitHub帐号：<a href="https://link.zhihu.com/?target=https%3A//github.com/">Build software better, together</a> 点击GitHub中的New repository创建新仓库，仓库名应该为：<strong>用户名</strong>.<a href="https://link.zhihu.com/?target=http%3A//github.io">http://github.io</a> 这个<strong>用户名</strong>使用你的GitHub帐号名称代替，这是固定写法，比如我的仓库名为：</p>
<figure data-type="image" tabindex="2"><img src="https://api.dj.ci/image/5ec11e397c7aa" alt="img" loading="lazy"></figure>
<p><strong>安装Git</strong></p>
<p>什么是Git ?简单来说Git是开源的分布式版本控制系统，用于敏捷高效地处理项目。我们网站在本地搭建好了，需要使用Git同步到GitHub上。如果想要了解Git的细节，参看<a href="https://link.zhihu.com/?target=http%3A//weibo.com/liaoxuefeng">廖雪峰</a>老师的Git教程：<a href="https://link.zhihu.com/?target=http%3A//www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000">Git教程</a> 从Git官网下载：<a href="https://link.zhihu.com/?target=https%3A//git-scm.com/download/win">Git - Downloading Package</a> 现在的机子基本都是64位的，选择64位的安装包，下载后安装，在命令行里输入git测试是否安装成功，若安装失败，参看其他详细的Git安装教程。安装成功后，将你的Git与GitHub帐号绑定，鼠标右击打开Git Bash</p>
<figure data-type="image" tabindex="3"><img src="https://api.dj.ci/image/5ec11e91cda44" alt="img" loading="lazy"></figure>
<p>或者在菜单里搜索Git Bash，设置user.name和user.email配置信息：</p>
<pre><code class="language-bash">git config --global user.name &quot;你的GitHub用户名&quot;
git config --global user.email &quot;你的GitHub注册邮箱&quot;
</code></pre>
<p>生成ssh密钥文件：</p>
<pre><code class="language-bash">ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot;
</code></pre>
<p>然后直接三个回车即可，默认不需要设置密码<br>
然后找到生成的.ssh的文件夹中的id_rsa.pub密钥，将内容全部复制</p>
<figure data-type="image" tabindex="4"><img src="https://bit.ly/3cldH5D" alt="img" loading="lazy"></figure>
<p>打开<a href="https://link.zhihu.com/?target=https%3A//github.com/settings/keys">GitHub_Settings_keys</a> 页面，新建new SSH Key</p>
<figure data-type="image" tabindex="5"><img src="https://bit.ly/2MeU2K5" alt="img" loading="lazy"></figure>
<p>Title为标题，任意填即可，将刚刚复制的id_rsa.pub内容粘贴进去，最后点击Add SSH key。<br>
在Git Bash中检测GitHub公钥设置是否成功，输入 ssh git@github.com ：</p>
<figure data-type="image" tabindex="6"><img src="https://bit.ly/2ArZVAX" alt="img" loading="lazy"></figure>
<p>如上则说明成功。这里之所以设置GitHub密钥原因是，通过非对称加密的公钥与私钥来完成加密，公钥放置在GitHub上，私钥放置在自己的电脑里。GitHub要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了省去每次输入密码的步骤，采用了ssh，当你推送的时候，git就会匹配你的私钥跟GitHub上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的。</p>
<p><strong>安装Node.js</strong></p>
<p>Hexo基于Node.js，Node.js下载地址：<a href="https://link.zhihu.com/?target=https%3A//nodejs.org/en/download/">Download | Node.js</a> 下载安装包，注意安装Node.js会包含环境变量及npm的安装，安装后，检测Node.js是否安装成功，在命令行中输入 node -v :</p>
<figure data-type="image" tabindex="7"><img src="https://kyun.ltyuanfang.cn/tc/2020/05/30/3860017ef4102.jpg" alt="img" loading="lazy"></figure>
<p>检测npm是否安装成功，在命令行中输入npm -v :</p>
<figure data-type="image" tabindex="8"><img src="https://kyun.ltyuanfang.cn/tc/2020/05/30/67da85eafe071.jpg" alt="img" loading="lazy"></figure>
<p>到这了，安装Hexo的环境已经全部搭建完成。</p>
<p><strong>安装Hexo</strong></p>
<p>Hexo就是我们的个人博客网站的框架， 这里需要自己在电脑常里创建一个文件夹，可以命名为Blog，Hexo框架与以后你自己发布的网页都在这个文件夹中。创建好后，进入文件夹中，按住shift键，右击鼠标点击命令行</p>
<figure data-type="image" tabindex="9"><img src="https://kyun.ltyuanfang.cn/tc/2020/05/30/07c5cf68b1ecb.jpg" alt="img" loading="lazy"></figure>
<p>使用npm命令安装Hexo，输入：</p>
<pre><code class="language-bash">npm install -g hexo-cli 
</code></pre>
<p>这个安装时间较长耐心等待，安装完成后，初始化我们的博客，输入：</p>
<pre><code class="language-bash">hexo init blog
</code></pre>
<p>注意，这里的命令都是作用在刚刚创建的Blog文件夹中。</p>
<p>为了检测我们的网站雏形，分别按顺序输入以下三条命令：</p>
<pre><code class="language-bash">hexo new test_my_site

hexo g

hexo s
</code></pre>
<p>这些命令在后面作介绍，完成后，打开浏览器输入地址：</p>
<p>localhost:4000</p>
<p>可以看出我们写出第一篇博客，只不过我下图是我修改过的配置，和你的显示不一样。</p>
<figure data-type="image" tabindex="10"><img src="https://kyun.ltyuanfang.cn/tc/2020/05/30/f6652c45938b4.jpg" alt="img" loading="lazy"></figure>
<p>现在来介绍常用的Hexo 命令</p>
<p>npm install hexo -g #安装Hexo<br>
npm update hexo -g #升级<br>
hexo init #初始化博客</p>
<p>命令简写<br>
hexo n &quot;我的博客&quot; == hexo new &quot;我的博客&quot; #新建文章<br>
hexo g == hexo generate #生成<br>
hexo s == hexo server #启动服务预览<br>
hexo d == hexo deploy #部署</p>
<p>hexo server #Hexo会监视文件变动并自动更新，无须重启服务器<br>
hexo server -s #静态模式<br>
hexo server -p 5000 #更改端口<br>
hexo server -i 192.168.1.1 #自定义 IP<br>
hexo clean #清除缓存，若是网页正常情况下可以忽略这条命令</p>
<p>刚刚的三个命令依次是新建一篇博客文章、生成网页、在本地预览的操作。</p>
<p><strong>推送网站</strong></p>
<p>上面只是在本地预览，接下来要做的就是就是推送网站，也就是发布网站，让我们的网站可以被更多的人访问。在设置之前，需要解释一个概念，在blog根目录里的_config.yml文件称为<strong>站点</strong>配置文件，如下图</p>
<figure data-type="image" tabindex="11"><img src="https://kyun.ltyuanfang.cn/tc/2020/05/30/e6535838d2556.jpg" alt="img" loading="lazy"></figure>
<p>进入根目录里的themes文件夹，里面也有个_config.yml文件，这个称为<strong>主题</strong>配置文件，如下图</p>
<figure data-type="image" tabindex="12"><img src="https://kyun.ltyuanfang.cn/tc/2020/05/30/c2b2ad5cc8337.jpg" alt="img" loading="lazy"></figure>
<p>下一步将我们的Hexo与GitHub关联起来，打开站点的配置文件_config.yml，翻到最后修改为：</p>
<p>deploy:<br>
type: git<br>
repo: 这里填入你之前在GitHub上创建仓库的完整路径，记得加上 .git<br>
branch: master参考如下：</p>
<figure data-type="image" tabindex="13"><img src="https://kyun.ltyuanfang.cn/tc/2020/05/30/5d13fa2bb6fa0.jpg" alt="img" loading="lazy"></figure>
<p>保存站点配置文件。</p>
<p>其实就是给hexo d 这个命令做相应的配置，让hexo知道你要把blog部署在哪个位置，很显然，我们部署在我们GitHub的仓库里。最后安装Git部署插件，输入命令：</p>
<pre><code class="language-basemake">npm install hexo-deployer-git --save
</code></pre>
<p>这时，我们分别输入三条命令：</p>
<pre><code class="language-bash">hexo clean 
hexo g 
hexo d
</code></pre>
<p>其实第三条的 hexo d 就是部署网站命令，d是deploy的缩写。完成后，打开浏览器，在地址栏输入你的放置个人网站的仓库路径，即 <a href="https://link.zhihu.com/?target=http%3A//xxxx.github.io">http://xxxx.github.io</a> (知乎排版可能会出现&quot;http://&quot;字样，参考下图) 比如我的xxxx就是我的GitHub用户名：</p>
<figure data-type="image" tabindex="14"><img src="https://kyun.ltyuanfang.cn/tc/2020/05/30/fccfe6f1ed7b7.jpg" alt="img" loading="lazy"></figure>
<p>你就会发现你的博客已经上线了，可以在网络上被访问了。</p>
<p><strong>绑定域名</strong></p>
<p>虽然在Internet上可以访问我们的网站，但是网址是GitHub提供的:<a href="https://link.zhihu.com/?target=http%3A//xxxx.github.io">http://xxxx.github.io</a> (知乎排版可能会出现&quot;http://&quot;字样) 而我们想使用我们自己的个性化域名，这就需要绑定我们自己的域名。这里演示的是在阿里云万网的域名绑定，在国内主流的域名代理厂商也就阿里云和腾讯云。登录到阿里云，进入管理控制台的域名列表，找到你的个性化域名，进入解析</p>
<figure data-type="image" tabindex="15"><img src="https://kyun.ltyuanfang.cn/tc/2020/05/30/c6839790d5a6c.jpg" alt="img" loading="lazy"></figure>
<p>然后添加解析</p>
<figure data-type="image" tabindex="16"><img src="https://kyun.ltyuanfang.cn/tc/2020/05/30/b890a62b40e48.jpg" alt="img" loading="lazy"></figure>
<p>包括添加三条解析记录，192.30.252.153是GitHub的地址，你也可以ping你的 <a href="https://link.zhihu.com/?target=http%3A//xxxx.github.io">http://xxxx.github.io</a> 的ip地址，填入进去。第三个记录类型是CNAME，CNAME的记录值是：你的用户名.<a href="https://link.zhihu.com/?target=http%3A//github.io">http://github.io</a> 这里千万别弄错了。第二步，登录GitHub，进入之前创建的仓库，点击settings，设置Custom domain，输入你的域名</p>
<figure data-type="image" tabindex="17"><img src="https://kyun.ltyuanfang.cn/tc/2020/05/30/93826a5b1b937.jpg" alt="img" loading="lazy"></figure>
<p>点击save保存。第三步，进入本地博客文件夹 ，进入blog/source目录下，创建一个记事本文件，输入你的域名，对，只要写进你自己的域名即可。如果带有www，那么以后访问的时候必须带有www完整的域名才可以访问，但如果不带有www，以后访问的时候带不带www都可以访问。所以建议，不要带有www。这里我还是写了www(不建议带有www):</p>
<figure data-type="image" tabindex="18"><img src="https://kyun.ltyuanfang.cn/tc/2020/05/30/dfebca9b8320d.jpg" alt="img" loading="lazy"></figure>
<p>保存，命名为CNAME ，注意保存成<strong>所有文件</strong>而不是<strong>txt文件</strong>。</p>
<p>完成这三步，进入blog目录中，按住shift键右击打开命令行，依次输入：</p>
<pre><code class="language-bash">hexo clean
hexo g
hexo d
</code></pre>
<p>这时候打开浏览器在地址栏输入你的个性化域名将会直接进入你自己搭建的网站。</p>
<p><strong>更换主题</strong></p>
<p>如果你不喜欢Hexo默认的主题，可以更换不同的主题，主题传送门：<a href="https://link.zhihu.com/?target=https%3A//hexo.io/themes/">Themes</a> 我自己使用的是Next主题，可以在blog目录中的themes文件夹中查看你自己主题是什么。现在把默认主题更改成Next主题，在blog目录中（就是命令行的位置处于blog目录）打开命令行输入：</p>
<pre><code class="language-bash">git clone https://github.com/iissnan/hexo-theme-next themes/next
</code></pre>
<p>这是将Next主题下载到blog目录的themes主题下的next文件夹中。打开<strong>站点</strong>的_config.yml配置文件，修改主题为next</p>
<figure data-type="image" tabindex="19"><img src="https://kyun.ltyuanfang.cn/tc/2020/05/30/450c92ed241d9.jpg" alt="img" loading="lazy"></figure>
<p>打开<strong>主题</strong>的_config.yml配置文件，不是站点主题文件，找到Scheme Settings</p>
<figure data-type="image" tabindex="20"><img src="https://kyun.ltyuanfang.cn/tc/2020/05/30/ef283df92ad9f.jpg" alt="img" loading="lazy"></figure>
<p>next主题有三个样式，我用的是Pisces，你们可以自己试试看，选择你自己喜欢的样式（只需要把行首的#去除，#是注释），选择好后，再次部署网站，hexo g、hexo d，查看效果。选择其他主题，按照上述过程即可实现。</p>
<p><strong>初识Markdown语法</strong></p>
<p>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。Markdown语法简洁明了、容易掌握，而且功能比纯文本更强，因此写博客使用它，可以让用户更加专注的写文章，而不需要费尽心力的考虑样式，相对于html已经算是轻量级语言，像有道云笔记也支持Markdown写作。并且Markdown完全兼容html，也就是可以在文章里直接插入html代码。比如给博文添加音乐，就可以直接把音乐的外链html代码插入文章中。具体语法参看：<a href="https://link.zhihu.com/?target=http%3A//www.appinn.com/markdown/">Markdown 语法说明(简体中文版)</a> 可以说十分钟就可以入门。当然，工欲善其事必先利其器，选择一个好的Markdown编辑器也是非常重要的，这里推荐<a href="https://link.zhihu.com/?target=http%3A//code52.org/DownmarkerWPF/">MarkPad</a> 和<a href="https://link.zhihu.com/?target=http%3A//www.markdownpad.com/">The Markdown Editor for Windows</a> ，这是带有预览效果的编辑器，也可以使用本地的文本编辑器，更多的Markdown的语法与编辑器自己可以搜索了解。</p>
<p><strong>发布文章</strong></p>
<p>我们开始正式发布上线博客文章，在命令行中输入：</p>
<pre><code class="language-bash">hexo n &quot;博客名字&quot;
</code></pre>
<p>我们会发现在blog根目录下的source文件夹中的_post文件夹中多了一个 <strong>博客名字.md</strong> 文件，使用Markdown编辑器打开，就可以开始你的个人博客之旅了，Markdown常用的样式也就十来种，完全能够满足一般博文的样式要求，这是我的一篇博文内容示例：</p>
<figure data-type="image" tabindex="21"><img src="https://kyun.ltyuanfang.cn/tc/2020/05/30/2e3d19970c709.jpg" alt="img" loading="lazy"></figure>
<p>通过带有预览样式的Markdown编辑器实时预览书写的博文样式，也可以通过命令 hexo s --debug 在本地浏览器的localhost:4000 预览博文效果。写好博文并且样式无误后，通过hexo g、hexo d 生成、部署网页。随后可以在浏览器中输入域名浏览。</p>
<p><strong>寻找图床</strong></p>
<p>图床，当博文中有图片时，若是少量图片，可以直接把图片存放在source文件夹中，但这显然不合理的，因为图片会占据大量的存储的空间，加载的时候相对缓慢 ，这时考虑把博文里的图片上传到某一网站，然后获得外部链接，使用Markdown语法，<code>![图片信息](外部链接)</code> 完成图片的插入，这种网站就被成为图床。常见的简易的图床网站有：<a href="https://link.zhihu.com/?target=http%3A//www.tietuku.com/">贴图库图片外链</a> 国内算比较好的图床我认为有两个：新浪微博和 <a href="https://link.zhihu.com/?target=https%3A//www.qiniu.com/">七牛云</a> ，七牛云的使用方法可以参看其他文章。图床最重要的就是稳定速度快，所以在挑选图床的时候一定要仔细，下图是博文插入图片，使用图床外链的示例：</p>
<figure data-type="image" tabindex="22"><img src="https://kyun.ltyuanfang.cn/tc/2020/05/30/f853587ebae8c.jpg" alt="img" loading="lazy"></figure>
<p><strong>个性化设置</strong></p>
<p>所谓的个性化设置就是根据个人需要添加不同的插件及功能。</p>
<p>基本的有：</p>
<p>在站点配置文件_config.yml修改基本的站点信息</p>
<figure data-type="image" tabindex="23"><img src="https://kyun.ltyuanfang.cn/tc/2020/05/30/928052ff44cf6.jpg" alt="img" loading="lazy"></figure>
<p>依次是网站标题、副标题、网站描述、作者、网站头像外部链接、网站语言、时区等。</p>
<p>在主题配置文件_config.yml修改基本的主题信息，如：</p>
<figure data-type="image" tabindex="24"><img src="https://kyun.ltyuanfang.cn/tc/2020/05/30/98300104de472.jpg" alt="img" loading="lazy"></figure>
<p>博文打赏的微信、支付宝二维码图片，这里我是直接把这两张放在根目录的source文件夹中，并没有使用图床外链。</p>
<figure data-type="image" tabindex="25"><img src="https://kyun.ltyuanfang.cn/tc/2020/05/30/7b69c11c80b26.jpg" alt="img" loading="lazy"></figure>
<p>社交外链的设置，即在侧栏展示你的个人社交网站信息。</p>
<figure data-type="image" tabindex="26"><img src="https://kyun.ltyuanfang.cn/tc/2020/05/30/c36842cdf53cc.jpg" alt="img" loading="lazy"></figure>
<p>博文分享的插件jiathis，值设置为true。在配置文件中有很多的个性化设置，可以自尝试更多的修改。</p>
<p>进阶个性化：</p>
<ul>
<li>添加网易云音乐</li>
</ul>
<p>打开网页版的网易云音乐，选择喜欢的音乐，点击生成外链播放器</p>
<figure data-type="image" tabindex="27"><img src="https://kyun.ltyuanfang.cn/tc/2020/05/30/a3d8619a3f44e.jpg" alt="img" loading="lazy"></figure>
<p>复制外链的代码</p>
<figure data-type="image" tabindex="28"><img src="https://kyun.ltyuanfang.cn/tc/2020/05/30/acdf6b3697a14.jpg" alt="img" loading="lazy"></figure>
<p>比如在侧栏插入这首歌的音乐播放器，修改 blog\themes\next\layout_macro的sidebar.swig文件，添加刚刚复制的外链代码</p>
<figure data-type="image" tabindex="29"><img src="https://kyun.ltyuanfang.cn/tc/2020/05/30/f717bc0e96b63.jpg" alt="img" loading="lazy"></figure>
<p>重新生成、部署网页，效果如下</p>
<figure data-type="image" tabindex="30"><img src="https://kyun.ltyuanfang.cn/tc/2020/05/30/53cd793b738f4.jpg" alt="img" loading="lazy"></figure>
<ul>
<li>设置背景</li>
</ul>
<p>把你挑选的背景图片命名为：background.jpg，放在blog\themes\next\source\images里，在blog\themes\next\source\css_custom文件的custom.styl首部添加：</p>
<pre><code class="language-css">body {
  background:url(/images/background.jpg);
  background-attachment: fixed;
}
</code></pre>
<p>background-attachment: fixed;是固定背景图片。</p>
<p>这是设置一张静态图片作为背景，其实Next主题自带有动态的背景效果，修改主题配置文件中的canvas_nest: false为canvas_nest: true即可。</p>
<ul>
<li>增加侧栏菜单条目</li>
</ul>
<p>默认的侧栏菜单条目有：首页、归档、标签、关于、搜索等。如果你想要增加其他的菜单条目，修改主题配置文件_config.yml里的Menu Settings中的menu和menu_icons两个地方</p>
<figure data-type="image" tabindex="31"><img src="https://kyun.ltyuanfang.cn/tc/2020/05/30/24aba7b6aeef5.jpg" alt="img" loading="lazy"></figure>
<p>其中menu里是配置菜单项对应的页面位置（如：/love），menu_icons对应菜单项的图标，这里的图标是来自于<a href="https://link.zhihu.com/?target=http%3A//fontawesome.io/">Font Awesome</a> ，所以你需要在Font Awesome网站上找到你需要的icon，然后把该icon的名字写在menu_icons对应菜单名后面，注意冒号有一个英文输入状态的空格。设置好后，在命令行里输入：</p>
<pre><code class="language-bash">hexo new page &quot;你所要增加的菜单项名称（要和你在menu中的填写要匹配）&quot;
</code></pre>
<p>新建的页面在博客根目录下的source文件里，这时你就可以对新建的页面自定义设计。</p>
<p>还有更多的进阶个性化设置，如SEO、评论系统、个人头像、博客分享、订阅功能、High功能、404网页设置等，可以参看：</p>
<p><a href="https://link.zhihu.com/?target=http%3A//theme-next.iissnan.com/theme-settings.html">主题配置 - NexT 使用文档</a></p>
<p><a href="https://link.zhihu.com/?target=http%3A//theme-next.iissnan.com/third-party-services.html">第三方服务集成 - NexT 使用文档</a></p>
<p><a href="https://link.zhihu.com/?target=http%3A//theme-next.iissnan.com/tag-plugins.html">内置标签 - NexT 使用文</a></p>
<p><a href="https://link.zhihu.com/?target=http%3A//theme-next.iissnan.com/tag-plugins.html">档</a><a href="https://link.zhihu.com/?target=http%3A//theme-next.iissnan.com/advanced-settings.html">进阶设定 - NexT 使用文档</a></p>
<p>有很多人私信问我High功能特效如何设置，这里推荐一篇同是Next主题网站博主的文章：<a href="https://link.zhihu.com/?target=http%3A//www.iamlj.com/2016/08/add-special-effect-harlem-shake-for-hexo/">为Hexo Next主题添加哈林摇特效（五）</a></p>
<p><strong>其他</strong></p>
<p>终于写到这里了，也算是基本圆满完成了我的写作初衷，总结自己的一些经验，分享一些有趣的东西，不过脖子也是僵硬的受不了。我知道很多人想要建立自己的个人网站却一直没有付诸行动，希望这篇文章能给你一点点灵感与想法，just do it。本文是windows平台的搭建过程，其他平台可以参看相关资料，也有很多其他优秀的博客框架值得学习。如果有任何建议或想法、或疑问欢迎在评论区交流， 做好的网站不妨在评论区贴出网址，让大家一起学习。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Handsome主题的一些CSS修改]]></title>
        <id>https://blog.20140117.xyz/post/handsome-css/</id>
        <link href="https://blog.20140117.xyz/post/handsome-css/">
        </link>
        <updated>2019-12-25T09:22:40.000Z</updated>
        <content type="html"><![CDATA[<p>**说明：**博客用<code>Handsome</code>主题一年多了，体验还不错，特别适合做个人博客，而博主基于原主题做了下小小的修改，使其更加好看点，鉴于经常有人问博主修改方法，这里就在博客里说一下，顺便也说一下博客没有使用的修改方案，给同样使用<code>Handsome</code>主题的做下参考。</p>
<h2 id="方法">方法</h2>
<p><strong>1、首页文章版式圆角化</strong><br>
本项修改的是首页文章版式，包括图片使其四个角由方形变成圆角形状。将以下代码添加至后台主题设置 自定义<code>CSS</code>。</p>
<pre><code>#圆角大小可修改15px数值(别复制该行)
/*首页文章版式圆角化*/
.panel{
    border: none;
    border-radius: 15px;
}

.panel-small{
    border: none;
    border-radius: 15px;
}

.item-thumb{
    border-radius: 15px;  
}
</code></pre>
<p><strong>2、首页文章图片获取焦点放大</strong><br>
本项修改的是首页文章图片，将鼠标放到首页头图后使其放大。将以下代码添加至后台主题设置 自定义<code>CSS</code>。</p>
<pre><code>#放大的时间和大小自行修改以下数值(别复制该行)
/*首页文章图片获取焦点放大*/
.item-thumb{
    cursor: pointer;  
    transition: all 0.6s;  
}

.item-thumb:hover{
      transform: scale(1.05);  
}

.item-thumb-small{
    cursor: pointer;  
    transition: all 0.6s;
}

.item-thumb-small:hover{
    transform: scale(1.05);
}
</code></pre>
<p><strong>3、首页头像转动并放大</strong><br>
本项修改的是首页头像，将鼠标放至头像后使其转动并放大。将以下代码添加至后台主题设置 自定义<code>CSS</code>。</p>
<pre><code>#转动快慢和头像大小自行修改数值(别复制该行)
/*首页头像自动旋转*/
.thumb-lg{
    width:130px;
}

.avatar{
    -webkit-transition: 0.4s;
    -webkit-transition: -webkit-transform 0.4s ease-out;
    transition: transform 0.4s ease-out;
    -moz-transition: -moz-transform 0.4s ease-out; 
}

.avatar:hover{
    transform: rotateZ(360deg);
    -webkit-transform: rotateZ(360deg);
    -moz-transform: rotateZ(360deg);
}

#aside-user span.avatar{
    animation-timing-function:cubic-bezier(0,0,.07,1)!important;
    border:0 solid
}

#aside-user span.avatar:hover{
    transform:rotate(360deg) scale(1.2);
    border-width:5px;
    animation:avatar .5s
}
</code></pre>
<p><strong>4、首页头像放大并自动旋转</strong><br>
本项修改的是首页头像，效果就是将首页头像放大，并使其自动旋转。将以下代码添加至后台主题设置 自定义<code>CSS</code>。</p>
<pre><code>#旋转速度请修改3s数值(别复制该行)
/*首页头像放大并自动旋转*/
.thumb-lg{
    width:130px;
}

@-webkit-keyframes rotation{
    from {
        -webkit-transform: rotate(0deg);
    }
    to {
        -webkit-transform: rotate(360deg);
    }
}

.img-full{
    -webkit-transform: rotate(360deg);
    animation: rotation 3s linear infinite;
    -moz-animation: rotation 3s linear infinite;
    -webkit-animation: rotation 3s linear infinite;
    -o-animation: rotation 3s linear infinite;
}
</code></pre>
<p><strong>5、文章标题居中</strong><br>
本项修改的是文章标题，使其居中。将以下代码添加至后台主题设置 自定义<code>CSS</code>。</p>
<pre><code>/*文章标题居中*/
.panel h2{
    text-align: center; 
}
.post-item-foot-icon{
    text-align: center;
}
</code></pre>
<p><strong>6、首页文章版式阴影化</strong><br>
本项修改的是首页文章版式，包括图片使其四周加上一层绚丽的阴影。将以下代码添加至后台主题设置 自定义<code>CSS</code>。</p>
<pre><code>#阴影颜色修改rgba后面的值(别复制该行)
/*panel阴影*/
.panel{
   box-shadow: 1px 1px 5px 5px rgba(255, 112, 173, 0.35);
    -moz-box-shadow: 1px 1px 5px 5px rgba(255, 112, 173, 0.35);
}

.panel:hover{
    box-shadow: 1px 1px 5px 5px rgba(255, 112, 173, 0.35);
    -moz-box-shadow: 1px 1px 5px 5px rgba(255, 112, 173, 0.35);
}

.panel-small{
    box-shadow: 1px 1px 5px 5px rgba(255, 112, 173, 0.35);
    -moz-box-shadow: 1px 1px 5px 5px rgba(255, 112, 173, 0.35);
}

.panel-small:hover{
    box-shadow: 1px 1px 5px 5px rgba(255, 112, 173, 0.35);
    -moz-box-shadow: 1px 1px 5px 5px rgba(255, 112, 173, 0.35);
}

#如果也想使盒子四周也有阴影，加上以下代码
.app.container {
    box-shadow: 0 0 30px rgba(255, 112, 173, 0.35);
}
</code></pre>
<p><strong>7、自定义滚动条滑块</strong><br>
本项修改针对浏览器最右边的滚动条滑块，使其改变样式。将以下代码添加至后台主题设置 自定义<code>CSS</code>。</p>
<pre><code>/*定义滚动条高宽及背景 高宽分别对应横竖滚动条的尺寸*/
::-webkit-scrollbar{
    width: 3px;
    height: 16px;
    background-color: rgba(255,255,255,0);
}
 
/*定义滚动条轨道 内阴影+圆角*/
::-webkit-scrollbar-track{
    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);
    border-radius: 10px;
    background-color: rgba(255,255,255,0);
}
 
/*定义滑块 内阴影+圆角*/
::-webkit-scrollbar-thumb{
    border-radius: 10px;
    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);
    background-color: #555;
}
</code></pre>
<p><strong>8、评论表情修改</strong><br>
本项修改评论表情，将原始表情替换成泡泡和阿鲁，只需要替换主题文件里的<code>OwO.min.js</code>和<code>OwO.json</code>文件就可以了。文件下载：<a href="https://www.moerats.com/usr/down/HS_OwO.zip">HS_OwO.zip</a>。<code>OwO.min.js</code>在<code>handsome/assets/js/features</code>文件夹，<code>OwO.json</code>在<code>handsome/usr</code>文件夹。</p>
<p><strong>9、鼠标点击特效</strong><br>
将以下代码放在主题的<code>handsome/component/footer.php</code>中的``之前即可。</p>
<pre><code>#字体自行修改
&lt;script type=&quot;text/javascript&quot;&gt; 
/* 鼠标特效 */
var a_idx = 0; 
jQuery(document).ready(function($) { 
    $(&quot;body&quot;).click(function(e) { 
        var a = new Array(&quot;富强&quot;, &quot;民主&quot;, &quot;文明&quot;, &quot;和谐&quot;, &quot;自由&quot;, &quot;平等&quot;, &quot;公正&quot; ,&quot;法治&quot;, &quot;爱国&quot;, &quot;敬业&quot;, &quot;诚信&quot;, &quot;友善&quot;); 
        var $i = $(&quot;&lt;span/&gt;&quot;).text(a[a_idx]); 
        a_idx = (a_idx + 1) % a.length; 
        var x = e.pageX, 
        y = e.pageY; 
        $i.css({ 
            &quot;z-index&quot;: 999999999999999999999999999999999999999999999999999999999999999999999, 
            &quot;top&quot;: y - 20, 
            &quot;left&quot;: x, 
            &quot;position&quot;: &quot;absolute&quot;, 
            &quot;font-weight&quot;: &quot;bold&quot;, 
            &quot;color&quot;: &quot;#ff6651&quot; 
        }); 
        $(&quot;body&quot;).append($i); 
        $i.animate({ 
            &quot;top&quot;: y - 180, 
            &quot;opacity&quot;: 0 
        }, 
        1500, 
        function() { 
            $i.remove(); 
        }); 
    }); 
}); 
&lt;/script&gt;
</code></pre>
<p><strong>10、评论框特效</strong><br>
下载特效<code>JS</code>文件：<a href="https://www.moerats.com/usr/down/commentTyping.js">commentTyping.js</a>，将其放在网站目录某个地方，然后编辑主题文件<code>handsome/component/footer.php</code>，在``后面添加以下代码。</p>
<pre><code>&lt;script type=&quot;text/javascript&quot; src=&quot;(JS文件路径)&quot;&gt;&lt;/script&gt;
</code></pre>
<p>暂时只说这么多，修改方案很多由<a href="https://mikuac.com/">Zero博主</a>提供，还有通过本博客联系作者购买<code>Handsome</code>主题的，可打<code>9</code>折优惠。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[WordPress添加“上传到Chevereto图床”按钮]]></title>
        <id>https://blog.20140117.xyz/post/wordpress-chevereto/</id>
        <link href="https://blog.20140117.xyz/post/wordpress-chevereto/">
        </link>
        <updated>2019-12-01T15:20:04.000Z</updated>
        <content type="html"><![CDATA[<p>前段时间搭建了 Chevereto 图床，但在 WordPress 编辑器里需要上传图片的时候，需要另外打开图床上传比较麻烦。这时候可以在 WordPress 的编辑器里添加个上传按钮，利用 API 上传到 Chevereto 图床，这样上传图片到图床就方便啦！</p>
<figure data-type="image" tabindex="1"><img src="https://s2.ax1x.com/2019/12/01/Qmrvq0.png" alt="Qmrvq0.png" loading="lazy"></figure>
<p>下面我把详细啊方法记录一下：</p>
<h3 id="chevereto">Chevereto</h3>
<p>获取 API KEY: 登录，转到 <code>仪表盘-设置-API</code>，将  <code>API v1 key</code>  记录下来;</p>
<p>API 后端设置: 进入 Chevereto 的安装目录，将 <code>app/routes/route.api.php</code> 文件拷贝到 <code>app/routes/overrides/route.api.php</code> 文件;</p>
<p>允许跨域: 打开 <code>app/routes/overrides/route.api.php</code>，添加</p>
<pre><code>header('Access-Control-Allow-Origin: https://spiritx.xyz');
header('Access-Control-Allow-Methods: POST');
header('Access-Control-Allow-Headers: Content-Type, Accept, Authorization, X-Requested-With, Origin, Accept');
</code></pre>
<p>记得把白名单 <code>https://spiritx.xyz</code> 改成自己的域名或者改成* （所有域名可用）；</p>
<p>设置 API user(可选): 在 <code>app/routes/overrides/route.api.php</code> 中，找到<code>$uploaded_id = CHV\Image::uploadToWebsite($source);</code>那一行，更改为</p>
<pre><code>$uploaded_id = CHV\Image::uploadToWebsite($source,admin);
</code></pre>
<p>将 admin 替换为图床中的用户;</p>
<h3 id="wordpress-53版本以下用">WordPress 5.3版本以下用</h3>
<p>前端添加上传按钮(media button)： 将以下代码添加到<a href="https://www.yunloc.com/tag/wordpress">WordPress</a>正在使用的主题目录的 functions.php 中</p>
<pre><code>//添加图床上传按钮
add_action('media_buttons', 'add_my_media_button');
function add_my_media_button() {
    $currentUser = wp_get_current_user();
        if(!empty($currentUser-&gt;roles) &amp;&amp; in_array('administrator', $currentUser-&gt;roles)){
            $DOMAIN=&quot;图床的域名&quot;;
            $APIkey=&quot;图床的API v1 key&quot;;// 是管理员
        }
        else
            return 0;  // 非管理员
    echo '
            &lt;input id=&quot;up_to_chevereto&quot; type=&quot;file&quot; accept=&quot;image/*&quot; multiple=&quot;multiple&quot;/&gt;
            &lt;label for=&quot;up_to_chevereto&quot; id=&quot;up_img_label&quot;&gt;&lt;i class=&quot;fa fa-picture-o&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; 上传图片到Chevereto&lt;/label&gt;
          ';
?&gt;
&lt;style type=&quot;text/css&quot;&gt;
#up_to_chevereto {
  display: none;
}
#up_img_label {
  color: #fff;
  background-color: #16a085;
  border-radius: 5px;
  display: inline-block;
  padding: 5.2px;
}
&lt;/style&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
$('#up_to_chevereto').change(function() {
  window.wpActiveEditor = null;
  for (var i = 0; i &lt; this.files.length; i++) {
    var f=this.files[i];
    var formData=new FormData();
    formData.append('source',f);
    $.ajax({
        async:true,
        crossDomain:true,
        url:'https://&lt;?php echo $DOMAIN; ?&gt;/api/1/upload/?key=&lt;?php echo $APIkey; ?&gt;&amp;format=json',
        type : 'POST',
        processData : false,
        contentType : false,
        data:formData,
        beforeSend: function (xhr) {
            $('#up_img_label').html('&lt;i class=&quot;fa fa-spinner rotating&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; Uploading...');
        },
        success:function(res){
            wp.media.editor.insert('&lt;a href='+res.image.url+'&gt;&lt;img src='+res.image.url+' alt='+res.image.title+'&gt;&lt;/img&gt;&lt;/a&gt;');
            $(&quot;#up_img_label&quot;).html('&lt;i class=&quot;fa fa-check&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; 上传成功,继续上传');
        },
        error: function (){
            $(&quot;#up_img_label&quot;).html('&lt;i class=&quot;fa fa-times&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; 上传失败，重新上传');
        }
    });
  }
});
&lt;/script&gt;
&lt;?php
}
</code></pre>
<h3 id="wordpress-53版本用">WordPress 5.3版本用</h3>
<pre><code>//添加图床上传按钮
add_action('media_buttons', 'add_my_media_button');
function add_my_media_button() {
    $currentUser = wp_get_current_user();
        if(!empty($currentUser-&gt;roles) &amp;&amp; in_array('administrator', $currentUser-&gt;roles)){
            $DOMAIN=&quot;图床的域名&quot;;
            $APIkey=&quot;图床的API v1 key&quot;;// 是管理员
        }
        else
            return 0;  // 非管理员
    echo '
            &lt;input id=&quot;up_to_chevereto&quot; type=&quot;file&quot; accept=&quot;image/*&quot; multiple=&quot;multiple&quot;/&gt;
            &lt;label for=&quot;up_to_chevereto&quot; id=&quot;up_img_label&quot;&gt;&lt;i class=&quot;fa fa-picture-o&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; 上传图片到Chevereto&lt;/label&gt;
          ';
?&gt;
&lt;style type=&quot;text/css&quot;&gt;
#up_to_chevereto {
  display: none;
}
#up_img_label {
  color: #fff;
  background-color: #16a085;
  border-radius: 5px;
  display: inline-block;
  padding: 5.2px;
}
&lt;/style&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
jQuery('#up_to_chevereto').change(function() {
  window.wpActiveEditor = null;
  for (var i = 0; i &lt; this.files.length; i++) {
    var f=this.files[i];
    var formData=new FormData();
    formData.append('source',f);
    jQuery.ajax({
        async:true,
        crossDomain:true,
        url:'https://&lt;?php echo $DOMAIN; ?&gt;/api/1/upload/?key=&lt;?php echo $APIkey; ?&gt;&amp;format=json',
        type : 'POST',
        processData : false,
        contentType : false,
        data:formData,
        beforeSend: function (xhr) {
            jQuery('#up_img_label').html('&lt;i class=&quot;fa fa-spinner rotating&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; Uploading...');
        },
        success:function(res){
            wp.media.editor.insert('&lt;a href='+res.image.url+'&gt;&lt;img src='+res.image.url+' alt='+res.image.title+'&gt;&lt;/img&gt;&lt;/a&gt;');
            jQuery(&quot;#up_img_label&quot;).html('&lt;i class=&quot;fa fa-check&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; 上传成功,继续上传');
        },
        error: function (){
            jQuery(&quot;#up_img_label&quot;).html('&lt;i class=&quot;fa fa-times&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; 上传失败，重新上传');
        }
    });
  }
});
&lt;/script&gt;
&lt;?php
}
</code></pre>
<p>style里的样式可以根据自己偏好自定义</p>
<h3 id="使用预览">使用预览</h3>
<p>这里我的编辑器用的是WP Editor.md，界面不同但不影响上传按钮的使用</p>
<figure data-type="image" tabindex="2"><img src="https://s2.ax1x.com/2019/12/01/QmrzZV.gif" alt="QmrzZV.gif" loading="lazy"></figure>
<h4 id="文章引用至-spirit的小站-转载请注明出处">文章引用至 <a href="https://spiritx.xyz/843.html">spirit的小站</a> 转载请注明出处！</h4>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[typecho增加上传图片按钮到图床]]></title>
        <id>https://blog.20140117.xyz/post/typecho-pic/</id>
        <link href="https://blog.20140117.xyz/post/typecho-pic/">
        </link>
        <updated>2019-11-30T15:52:32.000Z</updated>
        <content type="html"><![CDATA[<h4 id="路过图床"><a href="https://imgse.com/">路过图床</a>是一个不错的图床网站，图片放到图床将有效缓解网站服务器带宽和存储空间的压力</h4>
<h4 id="官方提供的插件代码支持的网站程序很多如下图">官方提供的插件代码支持的网站程序很多，如下图</h4>
<figure data-type="image" tabindex="1"><a href="https://s2.ax1x.com/2019/12/02/Qmhx1K.png"><img src="https://s2.ax1x.com/2019/12/02/Qmhx1K.png" alt="路过图床1.png" loading="lazy"></a></figure>
<h4 id="其中并未显示支持typecho所以我们需要稍作修改下面是修改好的代码">其中并未显示支持typecho，所以我们需要稍作修改，下面是修改好的代码</h4>
<pre><code>&lt;script async id=&quot;chevereto-pup-src&quot; src=&quot;https://imgse.com/sdk/pup.js&quot; data-url=&quot;https://imgse.com/upload&quot; data-auto-insert=&quot;markdown-embed&quot;&gt;&lt;/script&gt;
</code></pre>
<h4 id="将代码放到需要上传图片的文件内一般放在footerphp的body之前">将代码放到需要上传图片的文件内，一般放在footer.php的</body>之前</h4>
<p>如果要实现后台上传图片，则需要在typecho的安装目录admin/footer.php里增加以上代码</p>
<figure data-type="image" tabindex="2"><a href="https://s2.ax1x.com/2019/12/02/Qm4C0H.png"><img src="https://s2.ax1x.com/2019/12/02/Qm4C0H.png" alt="路过图床2.png" loading="lazy"></a></figure>
<h4 id="设置好之后后台编辑框出现如下效果">设置好之后后台编辑框出现如下效果</h4>
<figure data-type="image" tabindex="3"><a href="https://s2.ax1x.com/2019/12/02/Qm4P7d.png"><img src="https://s2.ax1x.com/2019/12/02/Qm4P7d.png" alt="路过图床3.png" loading="lazy"></a></figure>
<h4 id="上传完成后markdown格式的代码会自动出现在编辑框里插入图片的操作将会非常方便">上传完成后markdown格式的代码会自动出现在编辑框里，插入图片的操作将会非常方便</h4>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Aria2 + Rclone 实现离线下载]]></title>
        <id>https://blog.20140117.xyz/post/aria2-to-gd/</id>
        <link href="https://blog.20140117.xyz/post/aria2-to-gd/">
        </link>
        <updated>2019-11-22T01:09:31.000Z</updated>
        <content type="html"><![CDATA[<h2 id="准备环境">准备环境</h2>
<ul>
<li>一台 vps 主机，博主使用 CentOS 进行演示</li>
<li>内存 &gt;= 512MB</li>
<li>KVM 架构</li>
<li>硬盘最好 &gt;= 10G</li>
<li>一个谷歌 Drive 账号</li>
</ul>
<p>更新系统并安装必须组件，此处安装 nginx web 服务器。</p>
<pre><code>yum -y update
yum -y install epel-release
yum -y install wget git unzip gcc gcc-c++ openssl-devel nginx
</code></pre>
<p>启动 nginx 并设置开机自启</p>
<pre><code>systemctl start nginx
systemctl enable nginx.service
systemctl stop firewalld # 关闭防火墙
</code></pre>
<p>这个时候可以访问服务器的外网 IP 查看 nginx 启动成功。</p>
<h2 id="安装-ariang">安装 AriaNg</h2>
<h3 id="安装-aria2">安装 aria2</h3>
<p>Aria2 是一个命令行下运行、多协议、多来源下载工具，支持磁力链接、BT 种子、HTTP、FTP 等下载协议，当然因为它是命令行下载工具，所以我们想下载一个东西还需要去敲命令自然是不方便，于是就有一些人根据 Aria2 的 API 开发了一些在线管理面板，可以直接在网页上面添加管理任务。</p>
<hr>
<p>先安装 aria2 服务端，使用逗比大佬的脚本</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/aria2.sh &amp;&amp; chmod +x aria2.sh &amp;&amp; bash aria2.sh
</code></pre>
<p>运行脚本后会出现脚本操作菜单，选择并输入 <code>1</code> 就会开始安装。</p>
<pre><code>Aria2 一键安装管理脚本 [vx.x.x]
-- Toyo | doub.io/shell-jc4 --
 
 1. 升级脚本
————————————
 1. 安装 Aria2
 2. 更新 Aria2
 3. 卸载 Aria2
————————————
 4. 启动 Aria2
 5. 停止 Aria2
 6. 重启 Aria2
————————————
 7. 修改 配置文件
 8. 查看 配置信息
 9. 查看 日志信息
10. 配置 自动更新 BT-Tracker服务器
————————————
 
当前状态: 已安装 并 已启动
 
请输入数字 [0-10]:
</code></pre>
<p>安装成功后配置文件在 <code>/root/.aria2/aria2.conf</code>，几个比较重要的配置：</p>
<pre><code># aria2 下载文件后所在目录
dir=/usr/local/caddy/www/aria2/Download
# aria2 RPC 监听端口
rpc-listen-port=6800
# aria2 RPC 秘钥
rpc-secret=codesofun
# 下载成功后执行的脚本
on-download-complete=/root/rcloneupload.sh
</code></pre>
<p>将下载目录修改为 <code>/data/Download</code></p>
<p>创建目录</p>
<pre><code>mkdir -p /data/Download
</code></pre>
<p>运行脚本</p>
<pre><code>bash aria2.sh
</code></pre>
<p>运行脚本后会出现脚本操作菜单，选择并输入 <code>7</code> 就会按照选项进行修改。</p>
<pre><code>Aria2 一键安装管理脚本 [vx.x.x]
-- Toyo | doub.io/shell-jc4 --
 
 0. 升级脚本
————————————
 1. 安装 Aria2
 2. 更新 Aria2
 3. 卸载 Aria2
————————————
 4. 启动 Aria2
 5. 停止 Aria2
 6. 重启 Aria2
————————————
 7. 修改 配置文件
 8. 查看 配置信息
 9. 查看 日志信息
10. 配置 自动更新 BT-Tracker服务器
————————————
 
当前状态: 已安装 并 已启动
 
请输入数字 [0-10]:
</code></pre>
<p><strong>其他操作</strong></p>
<ul>
<li>启动：<code>/etc/init.d/aria2 start</code></li>
<li>停止：<code>/etc/init.d/aria2 stop</code></li>
<li>重启：<code>/etc/init.d/aria2 restart</code></li>
<li>查看状态：<code>/etc/init.d/aria2 status</code></li>
<li>配置文件：<code>/root/.aria2/aria2.conf</code> （配置文件包含中文注释，但是一些系统可能不支持显示中文）</li>
<li>令牌密匙：随机生成（可以自己修改配置文件）</li>
<li>下载目录：<code>/data/Download</code></li>
</ul>
<h2 id="安装-ariang-2">安装 AriaNg</h2>
<p>AriaNg 是一个前端(HTML+JS静态)控制面板，不需要和 Aria2 (后端/服务端)放在一个服务器或者设备中，你甚至可以只在服务器上面搭建 Aria2 后端，然后访问别人建好的 AriaNg 前端面板，也可以远程操作 Aria2 后端！</p>
<p>Github 源码地址：https://github.com/mayswind/AriaNg</p>
<p>不需要和 Aria2 (后端/服务端)放在一个服务器或者设备中，你甚至可以只在服务器上面搭建 Aria2 后端，然后访问别人建好的 AriaNg 前端面板，也可以远程操作 Aria2 后端！</p>
<p><strong>下载 AriaNg</strong></p>
<pre><code>mkdir -p /data/www/ariang
cd /data/www/ariang
wget https://github.com/mayswind/AriaNg-DailyBuild/archive/master.zip &amp;&amp; unzip master.zip
mv AriaNg-DailyBuild-master/* .
rm -rf master.zip AriaNg-DailyBuild-master
</code></pre>
<p><strong>配置 Nginx 虚拟主机</strong></p>
<pre><code>cd /etc/nginx/conf.d
touch ariang.conf
</code></pre>
<p>编辑配置</p>
<pre><code>vim ariang.conf
</code></pre>
<p>编辑nginx 配置，将下面的代码填入进去。</p>
<pre><code>server {
    listen 80;
    server_name &lt;IP_ADDRESS&gt;;

    location / {
        root   /data/www/ariang;
        index  index.html index.htm;
    }
}
</code></pre>
<blockquote>
<p>这个时候也可以使用 <code>nginx -t</code> 测试一下配置文件是否修改正确</p>
</blockquote>
<p>重新加载 nginx 配置</p>
<pre><code>systemctl reload nginx
</code></pre>
<p>访问 <code>http://IP_HOST</code> 即可看到 ariaNg 效果。</p>
<figure data-type="image" tabindex="1"><img src="https://blog.codesofun.com/assets/images/2018/11/ariang.png" alt="img" loading="lazy"></figure>
<h1 id="配置-google-drive">配置 Google Drive</h1>
<h2 id="挂载-google-drive-到-vps">挂载 Google Drive 到 VPS</h2>
<p>安装 Rclone</p>
<pre><code>yum -y install unzip
curl https://rclone.org/install.sh | sudo bash
</code></pre>
<p>配置</p>
<pre><code>[root@vultr ~]# rclone config
2018/11/25 09:31:54 NOTICE: Config file &quot;/root/.config/rclone/rclone.conf&quot; not found - using defaults
No remotes found - make a new one
n) New remote
s) Set configuration password
q) Quit config
n/s/q&gt; n
name&gt; codesofun
Type of storage to configure.
Enter a string value. Press Enter for the default (&quot;&quot;).
Choose a number from below, or type in your own value
 1 / A stackable unification remote, which can appear to merge the contents of several remotes
   \ &quot;union&quot;
 2 / Alias for a existing remote
   \ &quot;alias&quot;
 3 / Amazon Drive
   \ &quot;amazon cloud drive&quot;
 4 / Amazon S3 Compliant Storage Providers (AWS, Ceph, Dreamhost, IBM COS, Minio)
   \ &quot;s3&quot;
 5 / Backblaze B2
   \ &quot;b2&quot;
 6 / Box
   \ &quot;box&quot;
 7 / Cache a remote
   \ &quot;cache&quot;
 8 / Dropbox
   \ &quot;dropbox&quot;
 9 / Encrypt/Decrypt a remote
   \ &quot;crypt&quot;
10 / FTP Connection
   \ &quot;ftp&quot;
11 / Google Cloud Storage (this is not Google Drive)
   \ &quot;google cloud storage&quot;
12 / Google Drive
   \ &quot;drive&quot;
13 / Hubic
   \ &quot;hubic&quot;
14 / JottaCloud
   \ &quot;jottacloud&quot;
15 / Local Disk
   \ &quot;local&quot;
16 / Mega
   \ &quot;mega&quot;
17 / Microsoft Azure Blob Storage
   \ &quot;azureblob&quot;
18 / Microsoft OneDrive
   \ &quot;onedrive&quot;
19 / OpenDrive
   \ &quot;opendrive&quot;
20 / Openstack Swift (Rackspace Cloud Files, Memset Memstore, OVH)
   \ &quot;swift&quot;
21 / Pcloud
   \ &quot;pcloud&quot;
22 / QingCloud Object Storage
   \ &quot;qingstor&quot;
23 / SSH/SFTP Connection
   \ &quot;sftp&quot;
24 / Webdav
   \ &quot;webdav&quot;
25 / Yandex Disk
   \ &quot;yandex&quot;
26 / http Connection
   \ &quot;http&quot;
Storage&gt; 12
** See help for drive backend at: https://rclone.org/drive/ **

Google Application Client Id
Leave blank normally.
Enter a string value. Press Enter for the default (&quot;&quot;).
client_id&gt;
Google Application Client Secret
Leave blank normally.
Enter a string value. Press Enter for the default (&quot;&quot;).
client_secret&gt;
Scope that rclone should use when requesting access from drive.
Enter a string value. Press Enter for the default (&quot;&quot;).
Choose a number from below, or type in your own value
 1 / Full access all files, excluding Application Data Folder.
   \ &quot;drive&quot;
 2 / Read-only access to file metadata and file contents.
   \ &quot;drive.readonly&quot;
   / Access to files created by rclone only.
 3 | These are visible in the drive website.
   | File authorization is revoked when the user deauthorizes the app.
   \ &quot;drive.file&quot;
   / Allows read and write access to the Application Data folder.
 4 | This is not visible in the drive website.
   \ &quot;drive.appfolder&quot;
   / Allows read-only access to file metadata but
 5 | does not allow any access to read or download file content.
   \ &quot;drive.metadata.readonly&quot;
scope&gt; 1
ID of the root folder
Leave blank normally.
Fill in to access &quot;Computers&quot; folders. (see docs).
Enter a string value. Press Enter for the default (&quot;&quot;).
root_folder_id&gt;
Service Account Credentials JSON file path
Leave blank normally.
Needed only if you want use SA instead of interactive login.
Enter a string value. Press Enter for the default (&quot;&quot;).
service_account_file&gt;
Edit advanced config? (y/n)
y) Yes
n) No
y/n&gt; n
Remote config
Use auto config?
 * Say Y if not sure
 * Say N if you are working on a remote or headless machine or Y didn't work
y) Yes
n) No
y/n&gt; n
If your browser doesn't open automatically go to the following link: https://accounts.google.com/o/oauth2/auth?access_type=offline&amp;client_id=202264815644.apps.googleusercontent.com&amp;redirect_uri=urn%3Aietf%3Awg%3Aoauth%3A2.0%3Aoob&amp;response_type=code&amp;scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive&amp;state=0fbdd**********************05a3b00e23
Log in and authorize rclone for access
Enter verification code&gt; 4/owSACseTxM*************c2HtEVX_yEhBcr--JiFTA7-Pfg

Configure this as a team drive?
y) Yes
n) No
y/n&gt; y
Fetching team drive list...
No team drives found in your account--------------------
[codesofun]
type = drive
scope = drive
token = {&quot;access_token&quot;:&quot;ya29.GltfBn_YA8e0lgJNKeMAHZ3b_IeIBXHHrJxMO7wfW0AsY6v_Nso8YczhZafVe8UIIgK6ft1dn6BqP-UWp-W2YXBtcf6zbLuIZgKcPqwnhsVAkx3f7QcO5m0EUvAv&quot;,&quot;token_type&quot;:&quot;Bearer&quot;,&quot;refresh_token&quot;:&quot;1/hFSVnEeJ8CkFmrpdd7IGNx69mhkj8Cpny6JUktv3xcY&quot;,&quot;expiry&quot;:&quot;2018-11-25T10:42:09.400295503Z&quot;}
--------------------
y) Yes this is OK
e) Edit this remote
d) Delete this remote
y/e/d&gt; y
Current remotes:

Name                 Type
====                 ====
codesofun            drive

e) Edit existing remote
n) New remote
d) Delete remote
r) Rename remote
c) Copy remote
s) Set configuration password
q) Quit config
e/n/d/r/c/s/q&gt; q
</code></pre>
<h1 id="整合-aria2-rclone">整合 Aria2 + Rclone</h1>
<p>这个时候我们使用 aria2 去下载文件，下载成功后触发一个脚本让它将文件移动到 Rclone 同步的文件夹内，这样在 Google Drive 就会自动有这个文件啦。</p>
<p>新建一个名为 <code>rcloneupload.sh</code> 的脚本。</p>
<pre><code>vim /root/rcloneupload.sh
</code></pre>
<p>编辑脚本，将下面内容全部填入脚本中保存。</p>
<pre><code>#!/bin/bash

filepath=$3	 #取文件原始路径，如果是单文件则为/Download/a.mp4，如果是文件夹则该值为文件夹内第一个文件比如/Download/a/1.mp4
path=${3%/*}	 #取文件根路径，如把/Download/a/1.mp4变成/Download/a
downloadpath='/data/Download'	#Aria2下载目录
name='codesofun' #配置Rclone时的name
folder='/share'	 #网盘里的文件夹，如果是根目录直接留空
MinSize='10k'	 #限制最低上传大小，默认10k，BT下载时可防止上传其他无用文件。会删除文件，谨慎设置。
MaxSize='15G'	 #限制最高文件大小，默认15G，OneDrive上传限制。

if [ $2 -eq 0 ]; then exit 0; fi

while true; do
if [ &quot;$path&quot; = &quot;$downloadpath&quot; ] &amp;&amp; [ $2 -eq 1 ]	#如果下载的是单个文件
    then
    rclone move -v &quot;$filepath&quot; ${name}:${folder} --min-size $MinSize --max-size $MaxSize
    rm -vf &quot;$filepath&quot;.aria2	#删除残留的.aria.2文件
    exit 0
elif [ &quot;$path&quot; != &quot;$downloadpath&quot; ]	#如果下载的是文件夹
    then
    while [[ &quot;`ls -A &quot;$path/&quot;`&quot; != &quot;&quot; ]]; do
    rclone move -v &quot;$path&quot; ${name}:/${folder}/&quot;${path##*/}&quot; --min-size $MinSize --max-size $MaxSize --delete-empty-src-dirs
    rclone delete -v &quot;$path&quot; --max-size $MinSize	#删除多余的文件
    rclone rmdirs -v &quot;$downloadpath&quot; --leave-root	#删除空目录，--delete-empty-src-dirs 参数已实现，加上无所谓。
    done
    rm -vf &quot;$path&quot;.aria2	#删除残留的.aria2文件
    exit 0
fi
done
</code></pre>
<p>需要修改几个地方：</p>
<ul>
<li><code>downloadpath</code>：填写 aria2 的下载目录</li>
<li><code>name</code>：填写 rclone 配置的名称</li>
<li><code>folder</code>：填写谷歌云盘的文件夹名称，根目录填 <code>/</code> 即可</li>
</ul>
<p>保存后给予执行权限</p>
<pre><code>chmod +x /root/rcloneupload.sh
</code></pre>
<p>然后再到 Aria2 配置文件中加上一行 <code>on-download-complete=/root/rcloneupload.sh</code> 即可，后面为脚本的路径。重启 Aria2 生效。</p>
<pre><code>vim /root/.aria2/aria2.conf

on-download-complete=/root/rcloneupload.sh
/etc/init.d/aria2 restart
</code></pre>
<h1 id="请开始你的表演">请开始你的表演</h1>
]]></content>
    </entry>
</feed>